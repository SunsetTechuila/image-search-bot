name: Deploy Server

on:
  push:
    branches:
      - master
      - docker
    paths:
      - packages/image-search-server/src/**
      - packages/image-search-server/package.json
      - Dockerfile
      - docker-compose.yml

jobs:
  check-credentials:
    name: Check for SSH credentials
    runs-on: ubuntu-latest
    environment: production
    outputs:
      is_set: ${{ steps.check.outputs.is_set }}
    steps:
      - name: Perform check
        id: check
        run: |
          if [[ '${{ secrets.SSH_KEY }}' && '${{ secrets.SSH_HOST }}' && '${{ secrets.SSH_USERNAME }}' ]]; then
            echo "is_set=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_set=false" >> "$GITHUB_OUTPUT"
            echo "SSH credentials are not set. Skipping deployment."
          fi

  check-package:
    name: Check package
    needs: check-credentials
    if: ${{ needs.check-credentials.outputs.is_set == 'true' }}
    uses: ./.github/workflows/check.yml
    secrets: inherit
    with:
      cwd: packages/image-search-server

  deploy:
    name: Deploy server
    runs-on: ubuntu-24.04-arm
    needs: check-package
    environment: production
    steps:
      - name: Checkout repo
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@941183f0a080fa6be59a9e3d3f4108c19a528204

      - name: Build image
        run: |
          docker build --platform linux/arm64 --pull --rm -f 'Dockerfile' -t image-search-server:latest '.'
          docker save -o image-search-server.tar image-search-server:latest

      - name: Compress image
        run: gzip image-search-server.tar

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo '${{ secrets.SSH_KEY }}' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo 'StrictHostKeyChecking no' >> ~/.ssh/config

      - name: Deploy image
        run: scp image-search-server.tar.gz docker-compose.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/tmp/

      - name: Run container
        uses: appleboy/ssh-action@0e19dd962da42eb2f2b775d6e133dc9dfd424aa6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd
            if [[ ! -d "image-search-server" ]]; then
              echo "Create the image-search-server folder with the .env file in it first." >&2
              exit 1
            fi
            cd image-search-server
            mv -f /tmp/image-search-server.tar.gz /tmp/docker-compose.yml ./
            docker compose down
            docker rmi image-search-server:latest
            docker load -i image-search-server.tar.gz
            docker compose up -d
