name: Deploy Server

on:
  push:
    branches:
      - master
      - dev
    paths:
      - packages/server/src/**
      - packages/server/package.json
      - Dockerfile
      - docker-compose.yml
      - .github/workflows/deploy_server.yml
      - .github/workflows/build_server.yml

jobs:
  check-credentials:
    name: Check for SSH credentials
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'master' && 'production' || 'development' }}
    outputs:
      is_set: ${{ steps.check.outputs.is_set }}
    steps:
      - name: Perform check
        id: check
        run: |
          if [[ '${{ secrets.SSH_KEY }}' && '${{ secrets.SSH_HOST }}' && '${{ secrets.SSH_USERNAME }}' ]]; then
            echo "is_set=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_set=false" >> "$GITHUB_OUTPUT"
            echo "SSH credentials are not set. Skipping deployment."
          fi

  check-package:
    name: Check package
    needs: check-credentials
    if: ${{ needs.check-credentials.outputs.is_set == 'true' }}
    uses: ./.github/workflows/check.yml
    secrets: inherit
    with:
      cwd: packages/server

  build_server:
    name: Call building workflow
    needs: check-package
    uses: ./.github/workflows/build_server.yml

  deploy:
    name: Deploy server
    needs: build_server
    environment: ${{ github.ref_name == 'master' && 'production' || 'development' }}
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Download image
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          name: ${{ needs.build_server.outputs.artifact_name }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo '${{ secrets.SSH_KEY }}' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo 'StrictHostKeyChecking no' >> ~/.ssh/config

      - name: Deploy image
        run: scp image-search-server.tar docker-compose.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/tmp/

      - name: Run container
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd
            if [[ ! -d "image-search-server" ]]; then
              echo "Create the image-search-server folder with the .env file in it first." >&2
              exit 1
            fi
            cd image-search-server
            mv -f /tmp/image-search-server.tar /tmp/docker-compose.yml ./
            docker compose down
            docker rmi image-search-server:latest
            docker load -i image-search-server.tar
            docker compose up -d
